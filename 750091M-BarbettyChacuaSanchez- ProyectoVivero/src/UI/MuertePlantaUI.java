/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Control.ControlSeguimientos;
import Control.ControlSiembra;
import Modelo.Planta;
import Modelo.Seguimiento;
import Modelo.Siembra;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author xxval
 */
public class MuertePlantaUI extends javax.swing.JInternalFrame {

    private ControlSiembra controlSiembra;
    private ControlSeguimientos controlSeguimientos;

    /**
     * Creates new form MuertePlantaUI
     */
    public MuertePlantaUI() {
        initComponents();
        this.controlSeguimientos = new ControlSeguimientos();
        this.controlSiembra = new ControlSiembra();
        this.siembraTable.setModel(new SiembraTableModel());
        this.aceptarbtn.addActionListener(new RegistrarMuerteListener());
        siembraTable.updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        siembraTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        cantMjT = new javax.swing.JTextField();
        aceptarbtn = new javax.swing.JButton();
        cancelarbtn = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel1.setText("Registrar Muerte de Planta");

        jLabel3.setText("Cantidad de plantas muertas:");

        siembraTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(siembraTable);

        jLabel4.setText("Seleccione la siembra:");

        aceptarbtn.setText("Aceptar");

        cancelarbtn.setText("Cancelar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(185, 185, 185)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(236, 236, 236)
                                .addComponent(jLabel3)
                                .addGap(27, 27, 27)
                                .addComponent(cantMjT, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4)))
                        .addGap(0, 180, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelarbtn)
                .addGap(329, 329, 329)
                .addComponent(aceptarbtn)
                .addGap(196, 196, 196))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cantMjT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aceptarbtn)
                    .addComponent(cancelarbtn))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarbtn;
    private javax.swing.JButton cancelarbtn;
    private javax.swing.JTextField cantMjT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable siembraTable;
    // End of variables declaration//GEN-END:variables
     public class SiembraTableModel implements TableModel {

        @Override
        public int getRowCount() {
            //return curso.getListaCupos().size();

            return controlSiembra.getListaSiembras().size();
        }

        @Override
        public int getColumnCount() {
            return 3;
        }
        private String[] nombreColumnas = {"Nombre Planta", "Cantidad Sembrada", "Fecha de siembra"};

        @Override
        public String getColumnName(int columnIndex) {
            return nombreColumnas[columnIndex];
        }
        private Class[] tipoColumnas = {String.class, Integer.class, String.class};

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            return tipoColumnas[columnIndex];
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return columnIndex == 2;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            //Cupo cupo = curso.getListaCupos().get(rowIndex);
            Siembra siembra = controlSiembra.getListaSiembras().get(rowIndex);

            switch (columnIndex) {
                case 0:
                    return siembra.getPlanta().getNombre();
                case 1:
                    return siembra.getCantidad();
                case 2:
                    return siembra.getFecha();
            }
            return "";
        }

        @Override
        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {

            Siembra s = controlSiembra.getListaSiembras().get(rowIndex);
            if (columnIndex != 1) {
                return;
            }
            int cant = s.getCantidad();
            s.setCantidad(10);
        }

        @Override
        public void addTableModelListener(TableModelListener l) {
            // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void removeTableModelListener(TableModelListener l) {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

    }

    public class RegistrarMuerteListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            try {
                int row = siembraTable.getSelectedRow();
                siembraTable.updateUI();

                Siembra s = controlSiembra.getListaSiembras().get(row);

                int cant = s.getCantidad();
                int muertes = Integer.parseInt(cantMjT.getText());
                s.setCantidad(cant - muertes);
                controlSiembra.actualizarSiembra(s);
                siembraTable.updateUI();

                JOptionPane.showMessageDialog(rootPane, "Siembra modificada con Ã©xito");
            } catch (Exception ex) {
                Logger.getLogger(MuertePlantaUI.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }

}
